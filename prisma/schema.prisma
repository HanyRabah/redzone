generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String       @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          String       @default("admin")
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  bio           String?
  accounts      Account[]
  blogPosts     BlogPost[]   @relation("BlogPostAuthor")
  sessions      Session[]
  social        UserSocial[]
}

model UserSocial {
  id       String @id @default(cuid())
  platform String
  url      String
  userId   String
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique(name: "user_social_unique", fields: [platform, userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model HeroSection {
  id               String   @id @default(cuid())
  page             String   @unique
  backgroundImage  String?
  theme            String   @default("dark")
  welcomeText      String?
  titleLines       String[]
  descriptionLines String[]
  buttonText       String?
  buttonLink       String?
  isActive         Boolean  @default(true)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model HeroSlider {
  id            String      @id @default(cuid())
  page          String      @unique
  autoplay      Boolean     @default(true)
  autoplaySpeed Int         @default(5)
  showDots      Boolean     @default(true)
  showArrows    Boolean     @default(true)
  isActive      Boolean     @default(true)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  slides        HeroSlide[]
}

model HeroSlide {
  id              String     @id @default(cuid())
  heroSliderId    String
  backgroundImage String?
  welcomeText     String?
  titleLines      String[]
  description     String
  buttonText      String?
  buttonLink      String?
  buttonType      String     @default("internal")
  isActive        Boolean    @default(true)
  sortOrder       Int        @default(0)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  heroSlider      HeroSlider @relation(fields: [heroSliderId], references: [id], onDelete: Cascade)

  @@index([heroSliderId, sortOrder])
}

model AboutUsSection {
  id           String   @id @default(cuid())
  titleLines   String[]
  contentLines String[]
  closeLine    String?
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Project {
  id          String           @id @default(cuid())
  title       String
  description String
  image       String
  link        String?
  slug        String           @unique
  isActive    Boolean          @default(true)
  isFeatured  Boolean          @default(false)
  sortOrder   Int              @default(0)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  categoryId  String?
  content     String?          @default("")
  client      String?
  year        Int?
  role        String?
  category    ProjectCategory? @relation("ProjectToCategory", fields: [categoryId], references: [id])
}

model ProjectCategory {
  id        String    @id @default(cuid())
  name      String
  slug      String
  postCount Int       @default(0)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  projects  Project[] @relation("ProjectToCategory")
}

model Client {
  id        String   @id @default(cuid())
  name      String
  logo      String
  website   String?
  isActive  Boolean  @default(true)
  sortOrder Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model BlogPost {
  id             String         @id @default(cuid())
  title          String
  slug           String         @unique
  excerpt        String
  content        String
  image          String?
  publishedAt    DateTime?
  isPublished    Boolean        @default(false)
  isFeatured     Boolean        @default(false)
  seoTitle       String?
  seoDescription String?
  seoKeywords    String[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  authorId       String?
  categoryId     String         @default("")
  author         User?          @relation("BlogPostAuthor", fields: [authorId], references: [id], onDelete: Cascade)
  categories     BlogCategory[] @relation("categories")
  tags           BlogTag[]      @relation("tags")
}

model BlogCategory {
  id        String     @id @default(cuid())
  name      String     @unique
  slug      String     @unique
  postCount Int        @default(0)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  posts     BlogPost[] @relation("categories")
}

model BlogTag {
  id        String     @id @default(cuid())
  name      String     @unique
  slug      String     @unique
  postCount Int        @default(0)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  posts     BlogPost[] @relation("tags")
}

model Testimonial {
  id         String   @id @default(cuid())
  name       String
  role       String
  content    String
  avatar     String?
  rating     Int?     @default(5)
  isActive   Boolean  @default(true)
  isFeatured Boolean  @default(false)
  sortOrder  Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model WhoWeAreSection {
  id          String   @id @default(cuid())
  title       String
  description String
  extras      Json[]
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model TeamMember {
  id          String   @id @default(cuid())
  name        String
  designation String
  image       String?
  bio         String?
  socialLinks Json?
  isActive    Boolean  @default(true)
  sortOrder   Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model TeamSection {
  id         String   @id @default(cuid())
  smallTitle String?
  titleLines String[]
  isActive   Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model WeAreCreativeSection {
  id          String   @id @default(cuid())
  title       String
  description String
  images      String[]
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ContactDetails {
  id          String   @id @default(cuid())
  title       String
  description String
  contacts    Json[]
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ContactSubmission {
  id        String   @id @default(cuid())
  firstName String
  lastName  String
  email     String
  message   String
  isRead    Boolean  @default(false)
  isReplied Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SiteSettings {
  id        String   @id @default(cuid())
  key       String   @unique
  value     String
  type      String   @default("text")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Sections {
  id        String   @id @default(cuid())
  page      String
  section   String   @unique
  title     String   @default("")
  description String @default("")
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
